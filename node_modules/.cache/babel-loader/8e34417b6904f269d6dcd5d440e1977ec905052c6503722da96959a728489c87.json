{"ast":null,"code":"import axios from 'axios';\nimport { toast } from 'bulma-toast';\nexport default {\n  name: 'Product',\n  data() {\n    return {\n      product: {},\n      review: {},\n      reviews: {},\n      'quantity': 1,\n      user_id: null,\n      user_info: {},\n      userreviewid: [],\n      review_userid_List: []\n    };\n  },\n  mounted() {\n    this.getProduct(), this.getProductReviews(), this.getUserInfo();\n  },\n  methods: {\n    async getProduct() {\n      this.$store.commit('setIsLoading', true);\n      const category_slug = this.$route.params.category_slug;\n      const product_slug = this.$route.params.product_slug;\n      await axios.get(`/api/v1/products/${category_slug}/${product_slug}`).then(response => {\n        this.product = response.data;\n        document.title = this.product.name + ' | Glee';\n      }).catch(error => {\n        console.log(error);\n      });\n      this.$store.commit('setIsLoading', false);\n    },\n    async getUserInfo() {\n      await axios.get('api/v1/users/me/', {\n        headers: {\n          Authorization: `Token ${localStorage.getItem('token')}`\n        }\n      }).then(response => {\n        this.user_info = response.data;\n        this.user_id = response.data.id;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    async getProductReviews() {\n      const category_slug = this.$route.params.category_slug;\n      const product_slug = this.$route.params.product_slug;\n      await axios.get(`/api/v1/products/${category_slug}/${product_slug}/reviews`).then(response => {\n        this.reviews = response.data;\n        this.review_userid_List = this.reviews.map(review => review.user);\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    async submitReview() {\n      if (this.review_userid_List.includes(this.user_id))\n        // Checking whether the user has left a review for this product\n        toast({\n          message: 'You already have a review for this product!',\n          type: 'is-warning',\n          position: 'center',\n          duration: 3000\n        });else try {\n        const category_slug = this.$route.params.category_slug;\n        const product_slug = this.$route.params.product_slug;\n        const reviewData = {\n          user: this.user_id,\n          content: this.review.content,\n          stars: this.review.stars\n        };\n        const response = await axios.post(`/api/v1/products/${category_slug}/${product_slug}/reviews/`, reviewData);\n        console.log('Server response:', response.data);\n        this.review = {};\n        this.getProductReviews();\n        toast({\n          message: 'Review sent successfully',\n          type: 'is-success',\n          position: 'bottom-right',\n          duration: 3000\n        });\n      } catch (error) {\n        console.error('Error sending review:', error.response.data);\n        toast({\n          message: 'Error sending review',\n          type: 'is-danger',\n          position: 'bottom-right',\n          duration: 3000\n        });\n      }\n    },\n    addToCart() {\n      if (isNaN(this.quantity) || this.quantity < 1) {\n        this.quantity = 1;\n      }\n      const item = {\n        product: this.product,\n        quantity: this.quantity\n      };\n      this.$store.commit('addToCart', item);\n      toast({\n        message: 'The product was added to the cart',\n        type: 'is-success',\n        dismissible: true,\n        pauseOnHover: true,\n        duration: 2000,\n        position: 'bottom-right'\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","toast","name","data","product","review","reviews","user_id","user_info","userreviewid","review_userid_List","mounted","getProduct","getProductReviews","getUserInfo","methods","$store","commit","category_slug","$route","params","product_slug","get","then","response","document","title","catch","error","console","log","headers","Authorization","localStorage","getItem","id","map","user","submitReview","includes","message","type","position","duration","reviewData","content","stars","post","addToCart","isNaN","quantity","item","dismissible","pauseOnHover"],"sources":["/Users/belgee/Desktop/ICSI402-Software-Development/TeamProject/my_shop-main/shop_vue/src/views/Product.vue"],"sourcesContent":["<template>\n    <div class=\"page-product\">\n\n        <div class=\"catalog-card2\">\n            <div class=\"catalog-card2__imgbox\">\n                <figure class=\"image mb-6\">\n                    <img v-bind:src=\"product.get_image\">\n                </figure>\n            </div>\n            <div class=\"catalog-card2__description\">\n                <h4 class=\"catalog-card2__title\">\n                    {{ product.name }}\n                </h4>\n                <div class=\"catalog-card2__star \" data-rateyo-rating=\"4\"></div>\n                <p class=\"catalog-card2__price\">\n                    ${{ product.price }}\n                </p>\n                <p class=\"catalog-card2__text\">\n                    {{ product.description }}\n                </p>\n                <div class=\"field has-addons mt-6\">\n                    <div class=\"control\">\n                        <input type=\"number\" class=\"input\" min=\"1\" v-model=\"quantity\">\n                    </div>\n\n                    <div class=\"control\">\n                        <a class=\"button is-dark\" @click=\"addToCart\">Add to cart</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"columns is multiline\">\n\n            <div class=\"column is-9\">\n                <h2 class=\"title\">Reviews:</h2>\n                <div v-for=\"review in reviews\" :key=\"review.id\" class=\"review-wrapper\">\n                    <p class=\"title\">Review</p>\n                    <p>User_name: {{ review.user }}</p>\n                    <p>Stars: {{ review.stars }}</p>\n                    <p class=\"review-wrapper__text\">Review text:{{ review.content }}</p>\n                    <p>Date: {{ review.date_added }}</p>\n                </div>\n\n                <div>\n                    <form @submit.prevent=\"submitReview\">\n                        <label for=\"content\">Отзыв:</label>\n                        <textarea v-model=\"review.content\" id=\"content\" required></textarea>\n\n                        <label for=\"stars\">Оценка:</label>\n                        <input v-model.number=\"review.stars\" type=\"number\" id=\"stars\" required max=\"5\" />\n\n                        <button type=\"submit\">Отправить отзыв</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n\n    </div>\n</template>\n\n<style lang=\"scss\">\n\n.catalog-card2 {\n    display: flex;\n    justify-content: space-evenly;\n\n    &__description{\n        max-width: 700px;\n    }\n}\n\n.review-wrapper {\n    margin-bottom: 20px;\n    border-bottom: 1px solid #a3bbc8;\n\n    &__text {\n        font-size: 16px;\n        line-height: 30px;\n        color: #2292a5;\n    }\n\n}\n\n</style>\n\n<script>\nimport axios from 'axios'\nimport { toast } from 'bulma-toast'\n\nexport default {\n    name: 'Product',\n    data() {\n        return {\n            product: {},\n            review: {},\n            reviews: {},\n            'quantity': 1,\n            user_id: null,\n            user_info: {},\n            userreviewid: [],\n            review_userid_List: [],\n        }\n    },\n    mounted() {\n        this.getProduct(),\n            this.getProductReviews(),\n            this.getUserInfo()\n    },\n    methods: {\n        async getProduct() {\n            this.$store.commit('setIsLoading', true)\n\n            const category_slug = this.$route.params.category_slug\n            const product_slug = this.$route.params.product_slug\n\n            await axios\n                .get(`/api/v1/products/${category_slug}/${product_slug}`)\n                .then(response => {\n                    this.product = response.data\n\n                    document.title = this.product.name + ' | Glee'\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n            this.$store.commit('setIsLoading', false)\n        },\n\n        async getUserInfo() {\n\n            await axios\n                .get('api/v1/users/me/', {\n                    headers: {\n                        Authorization: `Token ${localStorage.getItem('token')}`\n                    }\n                })\n                .then(response => {\n                    this.user_info = response.data\n                    this.user_id = response.data.id\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n        },\n\n\n        async getProductReviews() {\n            const category_slug = this.$route.params.category_slug\n            const product_slug = this.$route.params.product_slug\n\n            await axios\n                .get(`/api/v1/products/${category_slug}/${product_slug}/reviews`)\n                .then(response => {\n                    this.reviews = response.data\n                    this.review_userid_List = this.reviews.map(review => review.user)\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n        },\n\n\n        async submitReview() {\n            if (this.review_userid_List.includes(this.user_id)) // Checking whether the user has left a review for this product\n                toast({\n                    message: 'You already have a review for this product!',\n                    type: 'is-warning',\n                    position: 'center',\n                    duration: 3000,\n                });\n            else\n                try {\n                    const category_slug = this.$route.params.category_slug\n                    const product_slug = this.$route.params.product_slug\n\n                    const reviewData = {\n                        user: this.user_id,\n                        content: this.review.content,\n                        stars: this.review.stars,\n                    }\n\n\n                    const response = await axios.post(`/api/v1/products/${category_slug}/${product_slug}/reviews/`, reviewData)\n                    console.log('Server response:', response.data)\n\n\n                    this.review = {}\n                    this.getProductReviews()\n\n\n                    toast({\n                        message: 'Review sent successfully',\n                        type: 'is-success',\n                        position: 'bottom-right',\n                        duration: 3000,\n                    });\n                } catch (error) {\n                    console.error('Error sending review:', error.response.data);\n\n                    toast({\n                        message: 'Error sending review',\n                        type: 'is-danger',\n                        position: 'bottom-right',\n                        duration: 3000,\n                    });\n                }\n        },\n\n        addToCart() {\n            if (isNaN(this.quantity) || this.quantity < 1) {\n                this.quantity = 1\n            }\n\n            const item = {\n                product: this.product,\n                quantity: this.quantity\n            }\n\n            this.$store.commit('addToCart', item)\n\n            toast({\n                message: 'The product was added to the cart',\n                type: 'is-success',\n                dismissible: true,\n                pauseOnHover: true,\n                duration: 2000,\n                position: 'bottom-right',\n            })\n\n\n        }\n    }\n}\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}