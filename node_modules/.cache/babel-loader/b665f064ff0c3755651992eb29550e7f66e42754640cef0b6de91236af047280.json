{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"page-category\"\n};\nvar _hoisted_2 = {\n  \"class\": \"columns is-multiline\"\n};\nvar _hoisted_3 = {\n  \"class\": \"column is-12\"\n};\nvar _hoisted_4 = {\n  \"class\": \"is-size-2 has-text-centered\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_ProductBox = _resolveComponent(\"ProductBox\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"h2\", _hoisted_4, _toDisplayString($data.category.name), 1 /* TEXT */)]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.category.products, function (product) {\n    return _openBlock(), _createBlock(_component_ProductBox, {\n      key: product.id,\n      product: product\n    }, null, 8 /* PROPS */, [\"product\"]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","$data","category","name","_Fragment","_renderList","products","product","_createBlock","_component_ProductBox","key","id"],"sources":["/home/uranbileg/class/TSHOP-VueJS-Frontend/src/views/Category.vue"],"sourcesContent":["<template>\n  <div class=\"page-category\">\n    <div class=\"columns is-multiline\">\n      <div class=\"column is-12\">\n        <h2 class=\"is-size-2 has-text-centered\">{{ category.name }}</h2>\n      </div>\n\n      <ProductBox v-for=\"product in category.products\" v-bind:key=\"product.id\" v-bind:product=\"product\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport { toast } from \"bulma-toast\";\n\nimport ProductBox from \"@/components/ProductBox.vue\";\n\nexport default {\n  name: \"Category\",\n  components: {\n    ProductBox,\n  },\n  data() {\n    return {\n      category: {\n        products: [],\n      },\n    };\n  },\n  mounted() {\n    this.getCategory();\n  },\n  watch: {\n    // need to normally update category.name after click\n    $route(to, from) {\n      if (to.name === \"Category\") {\n        this.getCategory();\n      }\n    },\n  },\n  methods: {\n    async getCategory() {\n      const categorySlug = this.$route.params.category_slug;\n      this.$store.commit(\"setIsLoading\", true);\n\n      try {\n        let response;\n        if (categorySlug === 'product') {\n          console.log('yes');\n          response = await axios.get(`/api/v1/latest-products/`);\n          console.log(response)\n          this.category.products=response.data\n        } else {\n          response = await axios.get(`/api/v1/products/${categorySlug}/`);\n          console.log(response)\n         this.category = response.data;\n\n        }\n\n        document.title = this.category.name + \" | Glee\";\n      } catch (error) {\n        console.log(error);\n        toast({\n          message: \"Something went wrong. Please try again.\",\n          type: \"is-danger\",\n          dismissible: true,\n          pauseOnHover: true,\n          duration: 2000,\n          position: \"bottom-right\",\n        });\n      } finally {\n        this.$store.commit(\"setIsLoading\", false);\n      }\n    }\n\n  },\n};\n</script>\n"],"mappings":";;;EACO,SAAM;AAAe;;EACnB,SAAM;AAAsB;;EAC1B,SAAM;AAAc;;EACnB,SAAM;AAA6B;;;uBAH7CA,mBAAA,CAQM,OARNC,UAQM,GAPJC,mBAAA,CAMM,OANNC,UAMM,GALJD,mBAAA,CAEM,OAFNE,UAEM,GADJF,mBAAA,CAAgE,MAAhEG,UAAgE,EAAAC,gBAAA,CAArBC,KAAA,CAAAC,QAAQ,CAACC,IAAI,iB,sBAG1DT,mBAAA,CAAoGU,SAAA,QAP1GC,WAAA,CAOoCJ,KAAA,CAAAC,QAAQ,CAACI,QAAQ,EAPrD,UAOyBC,OAAO;yBAA1BC,YAAA,CAAoGC,qBAAA;MAA5CC,GAAG,EAAEH,OAAO,CAACI,EAAE;MAASJ,OAAO,EAAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}